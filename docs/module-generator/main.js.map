{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,8G;;;;;;;;;;;;;;;;;;;;;;;;ACEuB;AAevB;IAUE,sBAAoB,SAAmB,EAAU,SAAmB;QAAhD,cAAS,GAAT,SAAS,CAAU;QAAU,cAAS,GAAT,SAAS,CAAU;QAJpE,SAAI,GAAY,KAAK,CAAC;QAEtB,QAAG,GAAG,kBAAkB,CAAC;QAG3B,IAAI,CAAC,IAAI,GAAG;YACP,GAAG,EAAE,qBAAqB;YAC3B,SAAS,EAAE,eAAe;SAC3B,CAAC;IAGF,CAAC;IAED,gCAAS,GAAT;QAAA,iBASC;QARG,uIAAoC,CAAC,IAAI,CAAC,UAAC,MAAM;YAC/C,KAAI,CAAC,SAAS,CAAC,kCAAkC,CAAC,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC3E,IAAI,CAAC,UAAC,QAAQ;gBACb,IAAM,OAAO,GAAG,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC/C,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IA1B0C;QAA1C,+DAAS,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,8DAAgB,EAAC,CAAC;kCAAa,8DAAgB;oDAAC;IAF7D,YAAY;QAXxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,mEAAqB;oBAC9B,QAAQ,EAAE,oEAAsB;iBACjC;aACF;;SAEF,CAAC;yCAW+B,sDAAQ,EAAqB,sDAAQ;OAVzD,YAAY,CAiDxB;IAAD,mBAAC;CAAA;AAjDwB;;;;;;;;;;;;;;;;;;;;;;;;ACjBiC;AACjB;AAEM;AAG/C;;;;;;;;;IASI;AAYJ;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC3BtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>App Component</h1>\\n\\n<button (click)=\\\"addModule()\\\">add</button>\\n\\n<div #vc></div>\\n\"","import {\n  Compiler, Component, Injector, NgModuleFactoryLoader, SystemJsNgModuleLoader, ViewChild, ViewContainerRef\n} from '@angular/core';\n\ndeclare const System;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [\n    {\n      provide: NgModuleFactoryLoader,\n      useClass: SystemJsNgModuleLoader\n    }\n  ],\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  @ViewChild('vc', {read: ViewContainerRef}) _container: ViewContainerRef;\n\n  data: any;\n\n  show: boolean = false;\n\n  url = './profile.module';\n\n  constructor(private _compiler: Compiler, private _injector: Injector) {\nthis.data = {\n     url: './profile.module.js',\n    className: 'ProfileModule'\n  };\n\n\n  }\n\n  addModule() {\n      System.import('./profile.module.js').then((module) => {\n        this._compiler.compileModuleAndAllComponentsAsync(module[this.data.className])\n          .then((compiled) => {\n            const factory = compiled.componentFactories[0];\n            this._container.createComponent(factory);\n          });\n      });\n\n  }\n\n\n\n /* addModule2() {\n    var loadScriptAsync = function (uri) {\n      return new Promise((resolve, reject) => {\n        var tag = document.createElement('script');\n        tag.src = uri;\n        tag.onload = () => {\n          resolve();\n        };\n        var firstScriptTag = document.getElementsByTagName('head')[0];\n        firstScriptTag.append(tag);\n      });\n    }\n    let scriptLoaded = loadScriptAsync('http://localhost/test/profile.module.js');\n    scriptLoaded.then((module)=>{\n      debugger;\n    })\n  }*/\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {RouterModule, Routes} from \"@angular/router\";\n\n/*const routes: Routes = [\n  {\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  {\n    path: 'profile', loadChildren: './profile.module#ProfileModule'\n  }\n];*/\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}